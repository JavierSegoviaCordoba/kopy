FILE: simple-1-level-deep-update-each.kt
    package com.javiersc.kotlin.kopy.playground

    public final fun diagnostics(): R|kotlin/Unit| {
        lval qux0: R|com/javiersc/kotlin/kopy/playground/Qux| = R|com/javiersc/kotlin/kopy/playground/Qux.Qux|(Int(7))
        lval baz0: R|com/javiersc/kotlin/kopy/playground/Baz| = R|com/javiersc/kotlin/kopy/playground/Baz.Baz|(R|<local>/qux0|, R|kotlin/collections/listOf|<R|kotlin/String|>(vararg(String(Random 0), String(Random 1))))
        lval bar0: R|com/javiersc/kotlin/kopy/playground/Bar| = R|com/javiersc/kotlin/kopy/playground/Bar.Bar|(R|<local>/baz0|, Boolean(true))
        lval foo0: R|com/javiersc/kotlin/kopy/playground/Foo| = R|com/javiersc/kotlin/kopy/playground/Foo.Foo|(R|<local>/bar0|, Char(W))
        lval foo61: R|com/javiersc/kotlin/kopy/playground/Foo| = R|<local>/foo0|.R|SubstitutionOverride<com/javiersc/kotlin/kopy/playground/Foo.invoke: R|com/javiersc/kotlin/kopy/playground/Foo|>|(<L> = foo0@fun R|com/javiersc/kotlin/kopy/playground/Foo|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            (this@R|special/anonymous|, this@R|special/anonymous|.R|com/javiersc/kotlin/kopy/playground/Foo.bar|.R|com/javiersc/kotlin/kopy/playground/Bar.baz|.R|com/javiersc/kotlin/kopy/playground/Baz.texts|).R|SubstitutionOverride<com/javiersc/kotlin/kopy/playground/Foo.updateEach: R|kotlin/Unit|>|<R|kotlin/String|>(<L> = updateEach@fun <anonymous>(it: R|kotlin/String|): R|kotlin/String| <inline=NoInline>  {
                ^ <strcat>(R|<local>/it|, String( foo))
            }
            )
        }
        )
    }
    @R|com/javiersc/kotlin/kopy/Kopy|() public final data class Qux : R|kotlin/Any|, R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Qux>| {
        public constructor(number: R|kotlin/Int|): R|com/javiersc/kotlin/kopy/playground/Qux| {
            super<R|kotlin/Any|>()
        }

        public final val number: R|kotlin/Int| = R|<local>/number|
            public get(): R|kotlin/Int|

        public final operator fun component1(): R|kotlin/Int|

        public final fun copy(number: R|kotlin/Int| = this@R|com/javiersc/kotlin/kopy/playground/Qux|.R|com/javiersc/kotlin/kopy/playground/Qux.number|): R|com/javiersc/kotlin/kopy/playground/Qux|

        public open override fun _initKopyable(): R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Qux>| {
        }

        public open override val _atomic: R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Qux>|
            public get(): R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Qux>|

    }
    @R|com/javiersc/kotlin/kopy/Kopy|() public final class Baz : R|kotlin/Any|, R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Baz>| {
        public constructor(qux: R|com/javiersc/kotlin/kopy/playground/Qux|, texts: R|kotlin/collections/List<kotlin/String>|): R|com/javiersc/kotlin/kopy/playground/Baz| {
            super<R|kotlin/Any|>()
        }

        public final val qux: R|com/javiersc/kotlin/kopy/playground/Qux| = R|<local>/qux|
            public get(): R|com/javiersc/kotlin/kopy/playground/Qux|

        public final val texts: R|kotlin/collections/List<kotlin/String>| = R|<local>/texts|
            public get(): R|kotlin/collections/List<kotlin/String>|

        public open override fun _initKopyable(): R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Baz>| {
        }

        public open override val _atomic: R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Baz>|
            public get(): R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Baz>|

    }
    @R|com/javiersc/kotlin/kopy/Kopy|() public final data class Bar : R|kotlin/Any|, R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Bar>| {
        public constructor(baz: R|com/javiersc/kotlin/kopy/playground/Baz|, isValid: R|kotlin/Boolean|): R|com/javiersc/kotlin/kopy/playground/Bar| {
            super<R|kotlin/Any|>()
        }

        public final val baz: R|com/javiersc/kotlin/kopy/playground/Baz| = R|<local>/baz|
            public get(): R|com/javiersc/kotlin/kopy/playground/Baz|

        public final val isValid: R|kotlin/Boolean| = R|<local>/isValid|
            public get(): R|kotlin/Boolean|

        public final operator fun component1(): R|com/javiersc/kotlin/kopy/playground/Baz|

        public final operator fun component2(): R|kotlin/Boolean|

        public final fun copy(baz: R|com/javiersc/kotlin/kopy/playground/Baz| = this@R|com/javiersc/kotlin/kopy/playground/Bar|.R|com/javiersc/kotlin/kopy/playground/Bar.baz|, isValid: R|kotlin/Boolean| = this@R|com/javiersc/kotlin/kopy/playground/Bar|.R|com/javiersc/kotlin/kopy/playground/Bar.isValid|): R|com/javiersc/kotlin/kopy/playground/Bar|

        public open override fun _initKopyable(): R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Bar>| {
        }

        public open override val _atomic: R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Bar>|
            public get(): R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Bar>|

    }
    @R|com/javiersc/kotlin/kopy/Kopy|() public final data class Foo : R|kotlin/Any|, R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Foo>| {
        public constructor(bar: R|com/javiersc/kotlin/kopy/playground/Bar|, letter: R|kotlin/Char|): R|com/javiersc/kotlin/kopy/playground/Foo| {
            super<R|kotlin/Any|>()
        }

        public final val bar: R|com/javiersc/kotlin/kopy/playground/Bar| = R|<local>/bar|
            public get(): R|com/javiersc/kotlin/kopy/playground/Bar|

        public final val letter: R|kotlin/Char| = R|<local>/letter|
            public get(): R|kotlin/Char|

        public final operator fun component1(): R|com/javiersc/kotlin/kopy/playground/Bar|

        public final operator fun component2(): R|kotlin/Char|

        public final fun copy(bar: R|com/javiersc/kotlin/kopy/playground/Bar| = this@R|com/javiersc/kotlin/kopy/playground/Foo|.R|com/javiersc/kotlin/kopy/playground/Foo.bar|, letter: R|kotlin/Char| = this@R|com/javiersc/kotlin/kopy/playground/Foo|.R|com/javiersc/kotlin/kopy/playground/Foo.letter|): R|com/javiersc/kotlin/kopy/playground/Foo|

        public open override fun _initKopyable(): R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Foo>| {
        }

        public open override val _atomic: R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Foo>|
            public get(): R|kotlinx/atomicfu/AtomicRef<com/javiersc/kotlin/kopy/playground/Foo>|

    }
