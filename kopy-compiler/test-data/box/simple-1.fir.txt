FILE: simple-1.kt
    package com.javiersc.kotlin.kopy.playground

    public final fun box(): R|kotlin/String| {
        lval foo0: R|com/javiersc/kotlin/kopy/playground/Foo2| = R|com/javiersc/kotlin/kopy/playground/Foo2.Foo2|(number = Int(7), letter = Char(W), text = String(Random))
        lval foo1: R|com/javiersc/kotlin/kopy/playground/Foo| = R|com/javiersc/kotlin/kopy/playground/Foo.Foo|(number = Int(7), letter = Char(W), text = String(Random))
        lval foo01: R|com/javiersc/kotlin/kopy/playground/Foo2| = R|<local>/foo0|.R|SubstitutionOverride<com/javiersc/kotlin/kopy/playground/Foo2.copy2: R|com/javiersc/kotlin/kopy/playground/Foo2|>|(copy2@fun R|com/javiersc/kotlin/kopy/playground/Foo2|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            (this@R|special/anonymous|, this@R|special/anonymous|.R|com/javiersc/kotlin/kopy/playground/Foo2.text|).R|SubstitutionOverride<com/javiersc/kotlin/kopy/playground/Foo2.set2: R|kotlin/Unit|>|<R|kotlin/String|>(String(Replaced).R|kotlin/also|<R|kotlin/String|>(<L> = also@fun <anonymous>(it: R|kotlin/String|): R|kotlin/Unit| <inline=Inline, kind=EXACTLY_ONCE>  {
                this@R|special/anonymous|.R|com/javiersc/kotlin/kopy/playground/Foo2.text| = R|<local>/it|
            }
            ))
        }
        )
        lval foo11: R|com/javiersc/kotlin/kopy/playground/Foo| = R|<local>/foo1|.R|SubstitutionOverride<com/javiersc/kotlin/kopy/playground/Foo.copy: R|com/javiersc/kotlin/kopy/playground/Foo|>|(copy@fun R|com/javiersc/kotlin/kopy/playground/Foo|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            (this@R|special/anonymous|, this@R|special/anonymous|.R|com/javiersc/kotlin/kopy/playground/Foo.text|).R|SubstitutionOverride<com/javiersc/kotlin/kopy/playground/Foo.set: R|kotlin/Unit|>|<R|kotlin/String|>(String(Replaced))
        }
        )
        lval isOk: R|kotlin/Boolean| = ==(R|<local>/foo11|.R|com/javiersc/kotlin/kopy/playground/Foo.text|, String(Replaced))
        ^box when () {
            R|<local>/isOk| ->  {
                String(OK)
            }
            else ->  {
                <strcat>(String(Fail: text is ), R|<local>/foo11|.R|com/javiersc/kotlin/kopy/playground/Foo.text|, String( instead of `Replaced`))
            }
        }

    }
    @R|com/javiersc/kotlin/kopy/Kopy|() public final data class Foo : R|kotlin/Any|, R|com/javiersc/kotlin/kopy/runtime/Kopyable<com/javiersc/kotlin/kopy/playground/Foo>| {
        public constructor(number: R|kotlin/Int|, letter: R|kotlin/Char|, text: R|kotlin/String|): R|com/javiersc/kotlin/kopy/playground/Foo| {
            super<R|kotlin/Any|>()
        }

        public final val number: R|kotlin/Int| = R|<local>/number|
            public get(): R|kotlin/Int|

        public final val letter: R|kotlin/Char| = R|<local>/letter|
            public get(): R|kotlin/Char|

        public final var text: R|kotlin/String| = R|<local>/text|
            public get(): R|kotlin/String|
            public set(value: R|kotlin/String|): R|kotlin/Unit|

        public final operator fun component1(): R|kotlin/Int|

        public final operator fun component2(): R|kotlin/Char|

        public final operator fun component3(): R|kotlin/String|

        public final fun copy(number: R|kotlin/Int| = this@R|com/javiersc/kotlin/kopy/playground/Foo|.R|com/javiersc/kotlin/kopy/playground/Foo.number|, letter: R|kotlin/Char| = this@R|com/javiersc/kotlin/kopy/playground/Foo|.R|com/javiersc/kotlin/kopy/playground/Foo.letter|, text: R|kotlin/String| = this@R|com/javiersc/kotlin/kopy/playground/Foo|.R|com/javiersc/kotlin/kopy/playground/Foo.text|): R|com/javiersc/kotlin/kopy/playground/Foo|

        public open override fun _kopy_init(): R|com/javiersc/kotlin/kopy/playground/Foo| {
        }

    }
    public final data class Foo2 : R|com/javiersc/kotlin/kopy/playground/Kopyable2<com/javiersc/kotlin/kopy/playground/Foo2>| {
        public constructor(number: R|kotlin/Int|, letter: R|kotlin/Char|, text: R|kotlin/String|): R|com/javiersc/kotlin/kopy/playground/Foo2| {
            super<R|kotlin/Any|>()
        }

        public final val number: R|kotlin/Int| = R|<local>/number|
            public get(): R|kotlin/Int|

        public final val letter: R|kotlin/Char| = R|<local>/letter|
            public get(): R|kotlin/Char|

        public final var text: R|kotlin/String| = R|<local>/text|
            public get(): R|kotlin/String|
            public set(value: R|kotlin/String|): R|kotlin/Unit|

        public open override fun _kopy_init2(): R|com/javiersc/kotlin/kopy/playground/Foo2| {
            ^_kopy_init2 this@R|com/javiersc/kotlin/kopy/playground/Foo2|.R|com/javiersc/kotlin/kopy/playground/Foo2.copy|()
        }

        public final operator fun component1(): R|kotlin/Int|

        public final operator fun component2(): R|kotlin/Char|

        public final operator fun component3(): R|kotlin/String|

        public final fun copy(number: R|kotlin/Int| = this@R|com/javiersc/kotlin/kopy/playground/Foo2|.R|com/javiersc/kotlin/kopy/playground/Foo2.number|, letter: R|kotlin/Char| = this@R|com/javiersc/kotlin/kopy/playground/Foo2|.R|com/javiersc/kotlin/kopy/playground/Foo2.letter|, text: R|kotlin/String| = this@R|com/javiersc/kotlin/kopy/playground/Foo2|.R|com/javiersc/kotlin/kopy/playground/Foo2.text|): R|com/javiersc/kotlin/kopy/playground/Foo2|

    }
    public abstract interface Kopyable2<T> : R|kotlin/Any| {
        public open fun _kopy_init2(): R|T| {
            ^_kopy_init2 R|kotlin/TODO|()
        }

        public open infix fun copy2(copy: R|T.() -> kotlin/Unit|): R|T| {
            lval t: R|T| = this@R|com/javiersc/kotlin/kopy/playground/Kopyable2|.R|com/javiersc/kotlin/kopy/playground/Kopyable2._kopy_init2|()
            R|<local>/copy|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(R|<local>/t|)
            ^copy2 R|<local>/t|
        }

        public open infix fun <D> R|D|.set2(other: R|D|): R|kotlin/Unit| {
            ^set2 Q|kotlin/Unit|
        }

        public open infix fun <D> R|D|.update2(other: R|(D) -> D|): R|kotlin/Unit| {
            R|<local>/other|.R|SubstitutionOverride<kotlin/Function1.invoke: R|D|>|(this@R|com/javiersc/kotlin/kopy/playground/Kopyable2.update2|)
        }

    }
